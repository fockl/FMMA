name: benchmark
on:
  push:
    paths:
      - '**.cpp'
      - '**.hpp'

jobs:
  benchmark:
    if: github.repository == '<owner>/<repo>'
    runs-on: ubuntu-latest

    steps:
      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: gcc
          cmake: true
          make: true

      - name: Setup Github Actions
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          repositories: <target-repo>

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: build
        run: |
          cmake -Bbuild
          cmake --build build

      - name: benchmark
        run: |
          cd benchmark
          cmake -Bbuild
          cmake --build build
          bash run_benchmark.sh
          mkdir benchmark
          cp *.csv benchmark/
          cd ..

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Pip python
        run: |
          pip install -r .github/workflows/requirements.txt

      - name: benchmark image
        run: |
          cd benchmark
          python3 plot_time.py
          cp *.png benchmark/
          cd ..

      - name: Upload Benchmark
        uses: actions/upload-artifact@v4
        with:
          name: benchmark results
          path:
            benchmark/benchmark/*

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Auto-update files
        run: |
          git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -m "update benchmark"
          git push origin HEAD:${GITHUB_REF}

        env:
          GITUB_TOKEN: ${{ steps.generate-token.outputs.token }}
