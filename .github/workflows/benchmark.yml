name: benchmark
on:
  push:
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**.yml'
  pull_request:

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: gcc
          cmake: true
          make: true

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Github Actions
        uses: actions/create-github-app-token@v1
        id: generate-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: build
        run: |
          cmake -Bbuild
          cmake --build build

      - name: benchmark
        run: |
          cd benchmark
          cmake -Bbuild
          cmake --build build
          bash run_benchmark.sh
          cd ..

      - name: Upload Benchmark
        uses: actions/upload-artifact@v4
        with:
          name: benchmark results
          path:
            benchmark/results/*

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        env:
          GITUB_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: create comment
        run: |
          {
            echo "GH_SAMPLE_COMMENT<<EOF"
            cat benchmark/comment.md
            echo EOF
          } >> "$GITHUB_ENV"

      - name: gh comment to pull request
        run:
          {
            echo "GH_PR_STATUS<<EOF"
            gh pr comment ${{ github.ref_name }} --body "${{ env.GH_SAMPLE_COMMENT }}" --edit-last || gh pr comment ${{ github.refname }} --body "${{ env.GH_SAMPLE_COMMENT }}"
          } >> "$GITHUB_ENV"
          echo "${{ env.GH_PR_STATUS }}"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Setup python
        uses: actions/setup-python@v5
        if: ${{ env.GH_PR_STATUS }}
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Pip python
        run: |
          pip install -r .github/workflows/requirements.txt

      - name: benchmark image
        run: |
          cd benchmark
          python3 plot_time.py
          python3 plot_error.py
          cd ..

      - name: move benchmark results
        run: |
          cd benchmark
          mkdir -p results
          mv *.csv results/
          mv *.png results/
          cd ..

          #- name: Auto-update files
        #  run: |
          #     git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
          #     git config --global user.name "${GITHUB_ACTOR}"
          #     git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          #     git add benchmark/results/*
          #     git commit -m "update benchmark"
          #    git push origin HEAD:${GITHUB_REF}

